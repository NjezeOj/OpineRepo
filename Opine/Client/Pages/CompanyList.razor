@page "/company"
@inject ICompanyRepository companyRepository

<h3> Index Company</h3>

<Pagination CurrentPage="@paginationDTO.Page" TotalAmountPages="totalAmountPages"
            SelectedPage="SelectedPage"/>
<GenericList List="Companies">
    <WholeListTemplate>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th></th>
                    <th>Company Name</th>
                </tr>
            </thead> 
            <tbody>
                @foreach (var company in Companies)
                {
                    <tr>
                        <td>
                            <a class="btn btn-success">Edit</a>
                            <button class="btn btn-danger">Delete</button>
                        </td>
                        <td>
                            @company.CompanyName
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </WholeListTemplate>
</GenericList>
@code {
    List<Company> Companies;
    PaginationDTO paginationDTO = new PaginationDTO();
    private int totalAmountPages;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await LoadCompanies();
        }
        catch(Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    private async Task LoadCompanies()
    {
        var paginatedResponse = await companyRepository.GetCompanies(paginationDTO);
        Companies = paginatedResponse.Response;
        totalAmountPages = paginatedResponse.TotalAmountPages;
    }

    private async Task SelectedPage(int page)
    {
        paginationDTO.Page = page;
        await LoadCompanies();

    }
}
