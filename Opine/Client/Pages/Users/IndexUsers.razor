@page "/users"
@inject IUserRepository userRepository

<Pagination CurrentPage="@paginationDTO.Page" SelectedPage="SelectedPage"
            TotalAmountPages="totalAmountOfPages"/>
<h3>IndexUsers</h3>

<GenericList List="Users">
    <WholeListTemplate>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th></th>
                    <th>Company Name</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Users)
                {
                    <tr>
                        <td>
                            <a href="/users/edit/@user.UserId" class="btn btn-success">Edit</a>
                            <button class="btn btn-danger">Delete</button>
                        </td>
                        <td>
                            @user.Email
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </WholeListTemplate>
</GenericList>

@code {
    List<UserDTO> Users;
    PaginationDTO paginationDTO = new PaginationDTO();
    int totalAmountOfPages;

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    private async Task SelectedPage(int page)
    {
        paginationDTO.Page = page;
        await LoadUsers();
    }

    private async Task LoadUsers()
    {
        var paginatedResponse = await userRepository.GetUsers(paginationDTO);
        Users = paginatedResponse.Response;
        totalAmountOfPages = paginatedResponse.TotalAmountPages;
    }
}
